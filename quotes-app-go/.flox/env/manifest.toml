## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
go.pkg-path = "go"
# Runtime dependencies for a Go-built binary that are normally transient.
iana-etc.pkg-path = "iana-etc"
mailcap.pkg-path = "mailcap"
tzdata.pkg-path = "tzdata"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell specific profiles go here:
# bash = ...
# zsh  = ...
# fish = ...

[build.quotes-app-go-deps]
sandbox = "off"
command = """
mkdir -p $out
export GOMODCACHE=$out
go mod download -modcacherw
"""

[build.quotes-app-go]
version = "0.0.1"
description = "Quotes App written in Go"
command = """
  mkdir -p $out/{lib,bin}
  cp -pr quotes.json $out/lib
  export GOMODCACHE=${quotes-app-go-deps}
  go mod tidy
  go build -trimpath -o $out/bin/quotes-app-go main.go
  chmod +x $out/bin/quotes-app-go
"""
# once the program is built, we no longer need "go" in the environment
runtime-packages = [
  "iana-etc",
  "mailcap",
  "tzdata",
]


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
quotes-app-go.command = "go run main.go"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
