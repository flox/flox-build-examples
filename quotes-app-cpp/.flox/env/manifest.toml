version = 1

[install]
boost.pkg-path = "boost"
gnumake.pkg-path = "gnumake"
clang.pkg-path = "clang"
clang-tools.pkg-path = "clang-tools"

[build.quotes-app-cpp]
version = "0.0.1"
description = "Quotes app written in C++"
command = """
  mkdir -p $out/{bin,lib,libexec}
  make
  cp -pr quotes.json $out/lib
  cp -pr quotes-app-cpp $out/libexec
  echo "#!/usr/bin/env sh" > $out/bin/quotes-app-cpp
  echo "export QUOTES_FILE=$out/lib/quotes.json" >> $out/bin/quotes-app-cpp
  echo "exec $out/libexec/quotes-app-cpp" >> $out/bin/quotes-app-cpp
  chmod +x $out/bin/quotes-app-cpp
"""
# Need libboost.dylib at runtime.
runtime-packages = [ "boost" ]

[build.quotes-app-cpp-pure]
version = "0.0.1"
description = "Quotes app written in C++"
command = """
  mkdir -p $out/{bin,lib,libexec}
  make
  cp -pr quotes.json $out/lib
  cp -pr quotes-app-cpp $out/libexec
  echo "#!/usr/bin/env sh" > $out/bin/quotes-app-cpp-pure
  echo "export QUOTES_FILE=$out/lib/quotes.json" >> $out/bin/quotes-app-cpp-pure
  echo "exec $out/libexec/quotes-app-cpp" >> $out/bin/quotes-app-cpp-pure
  chmod +x $out/bin/quotes-app-cpp-pure
"""
sandbox = "pure"
# Need libboost.dylib at runtime.
runtime-packages = [ "boost" ]

[services]
quotes-cpp.command = "./quotes-cpp"
