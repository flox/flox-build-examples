version = 1

[install]
# Rust toolchain
cargo = { pkg-path = "cargo" }
rustc = { pkg-path = "rustc" }
clippy = { pkg-path = "clippy" }
rustfmt = { pkg-path = "rustfmt" }
rust-lib-src = { pkg-path = "rustPlatform.rustLibSrc" }

# Linkers
clang = { pkg-path = "clang", systems = ["aarch64-darwin"] }
gcc = { pkg-path = "gcc", systems = ["aarch64-linux", "x86_64-linux"] }

# Platform-specific libraries
# Until https://github.com/flox/flox/issues/3055 is fixed, we need all system
# types, even though it's really just needed on Mac.
#libiconv = { pkg-path = "libiconv", systems = ["aarch64-darwin", "x86_64-darwin"] }
libiconv = { pkg-path = "libiconv" }

# rust-analyzer goes in its own group because it's updated
# on a different cadence from the compiler and doesn't need
# to match versions
rust-analyzer = { pkg-path = "rust-analyzer", pkg-group = "extra" }

[build.quotes-app-rust]
command = '''
  mkdir -p $out/bin
  cargo build --release
  cp target/release/quotes-app-rust $out/bin/quotes-app-rust
'''
description = "A simple quotes server"
version = "0.1.0"
runtime-packages = ["libiconv", "gcc"]

# This build vendors dependencies in a build with the sandbox off
# so that we can use the network to fetch dependencies.
[build.quotes-app-rust-deps]
command = '''
  mkdir -p $out/etc
  cargo vendor $out/etc/vendor
'''
description = "Vendored dependencies for the quotes server"

# This build uses the vendored dependencies since the network is
# unavailable with the sandbox turned on.
[build.quotes-app-rust-pure]
command = '''
  # Tell cargo to use the vendored dependencies
  mkdir -p .cargo
  cat <<-'EOF' > .cargo/vendor-config.toml
  [source.crates-io]
  replace-with = "vendored-sources"

  [source.vendored-sources]
  directory = "${quotes-app-rust-deps}/etc/vendor"
EOF

  # Perform the build
  mkdir -p $out/bin
  cargo build --release --offline --config .cargo/vendor-config.toml
  cp target/release/quotes-app-rust $out/bin/quotes-app-rust-pure
'''
description = "A simple quotes server"
version = "0.1.0"
sandbox = "pure"
runtime-packages = ["libiconv", "gcc"]
