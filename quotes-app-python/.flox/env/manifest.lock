{
  "lockfile-version": 1,
  "manifest": {
    "version": 1,
    "install": {
      "poetry": {
        "pkg-path": "poetry"
      },
      "python3": {
        "pkg-path": "python3",
        "version": ">=3.12"
      }
    },
    "hook": {
      "on-activate": "  # Autogenerated by Flox\n\n  # Setup a Python virtual environment\n\n  if [ -z \"${FLOX_ENV_CACHE:-}\" ]; then\n    export POETRY_VIRTUALENVS_PATH=\"$out\"\n  else\n    export POETRY_VIRTUALENVS_PATH=\"$FLOX_ENV_CACHE/poetry/virtualenvs\"\n  fi\n\n  if [ -z \"$(poetry env info --path)\" ]; then\n    echo \"Creating poetry virtual environment in $POETRY_VIRTUALENVS_PATH\"\n    poetry lock --quiet\n  fi\n\n  # Quietly activate venv and install packages in a subshell so\n  # that the venv can be freshly activated in the profile section.\n  (\n    eval \"$(poetry env activate)\"\n    poetry install --quiet\n  )\n\n  # End autogenerated by Flox\n"
    },
    "profile": {
      "bash": "  # Autogenerated by Flox\n\n  echo \"Activating poetry virtual environment\" >&2\n  eval \"$(poetry env activate)\"\n\n  # End autogenerated by Flox\n",
      "zsh": "  # Autogenerated by Flox\n\n  echo \"Activating poetry virtual environment\" >&2\n  eval \"$(poetry env activate)\"\n\n  # End autogenerated by Flox\n",
      "fish": "  # Autogenerated by Flox\n\n  echo \"Activating poetry virtual environment\" >&2\n  eval (poetry env activate)\n\n  # End autogenerated by Flox\n",
      "tcsh": "  # Autogenerated by Flox\n\n  echo \"Activating poetry virtual environment\" >&2\n  eval \"`poetry env activate`\"\n\n  # End autogenerated by Flox\n"
    },
    "options": {},
    "build": {
      "quotes-app-python": {
        "command": "  mkdir $out\n\n  # Prevent install being a noop when run from an existing activation that\n  # already has the virtualenv and dependencies installed.\n  unset VIRTUAL_ENV\n  export POETRY_VIRTUALENVS_PATH=$out\n  export POETRY_VIRTUALENVS_IN_PROJECT=false\n\n  # Install dependencies to the virtualenv.\n  poetry install --no-root\n\n  # Build and install our project to the virtualenv.\n  poetry build --format wheel\n  poetry run pip install dist/quotes_app_python-*.whl\n\n  # Copy the binstub from the virtualenv to be wrapped by Flox.\n  venv_path=\"$(poetry env info --path)\"\n  mkdir -p \"${out}/bin\"\n  cp \"${venv_path}/bin/quotes-app-python\" \"${out}/bin/quotes-app-python\"\n",
        "runtime-packages": [
          "python3"
        ],
        "version": "0.0.1",
        "description": "A simple Python app that prints a random quote from a list of quotes."
      },
      "quotes-app-python-deps": {
        "command": "  mkdir $out\n\n  # Prevent install being a noop when run from an existing activation that\n  # already has the virtualenv and dependencies installed.\n  unset VIRTUAL_ENV\n  export POETRY_VIRTUALENVS_PATH=$out\n  export POETRY_VIRTUALENVS_IN_PROJECT=false\n\n  # Install dependencies and cache them in the build output.\n  export POETRY_CACHE_DIR=$out\n  poetry install --no-root\n\n  # Poetry doesn't have a way to populate the cache without installing the\n  # dependencies so we just delete the virtualenv after.\n  venv_path=\"$(poetry env info --path)\"\n  rm -rf \"$venv_path\"\n",
        "version": "0.0.1",
        "description": "Vendored dependencies for the quotes server"
      },
      "quotes-app-python-pure": {
        "command": "  mkdir $out\n\n  # Create an isolated virtualenv with the correct `python` and `site-packages`\n  # from this build.\n  export POETRY_VIRTUALENVS_PATH=$out\n  export POETRY_VIRTUALENVS_IN_PROJECT=false\n\n  # Install cached dependencies from the deps build.\n  export POETRY_CACHE_DIR=${quotes-app-python-deps}\n  poetry install --no-root\n\n  # Build and install our project to the virtualenv.\n  poetry build --format wheel\n  poetry run pip install dist/quotes_app_python-*.whl\n\n  # Copy the binstub from the virtualenv to be wrapped by Flox.\n  venv_path=\"$(poetry env info --path)\"\n  mkdir -p \"${out}/bin\"\n  cp \"${venv_path}/bin/quotes-app-python\" \"${out}/bin/quotes-app-python-pure\"\n",
        "runtime-packages": [
          "python3"
        ],
        "sandbox": "pure",
        "version": "0.0.1",
        "description": "A simple Python app that prints a random quote from a list of quotes."
      }
    }
  },
  "packages": [
    {
      "attr_path": "poetry",
      "broken": false,
      "derivation": "/nix/store/4w6v2q5rzzar548rm39lv5gh7cxrsihj-python3.12-poetry-2.1.3.drv",
      "description": "Python dependency management and packaging made easy",
      "install_id": "poetry",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "poetry-2.1.3",
      "pname": "poetry",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:23:59.184498Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.1.3",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/rim69jpxg54415838qcfjmpm0q4w8z5j-python3.12-poetry-2.1.3-dist",
        "out": "/nix/store/k88mnd9q9dm3zrk1zb69j6jdyz6bk828-python3.12-poetry-2.1.3"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "poetry",
      "broken": false,
      "derivation": "/nix/store/jggds24r9mp9mgnb73gbsl1cv1rlfgkv-python3.12-poetry-2.1.3.drv",
      "description": "Python dependency management and packaging made easy",
      "install_id": "poetry",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "poetry-2.1.3",
      "pname": "poetry",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:42:18.941486Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.1.3",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/yrp5jw81c7pzx8xhcb2r4iwmpv27il1h-python3.12-poetry-2.1.3-dist",
        "out": "/nix/store/hzfm7mrx0i50k36ir02l58q3wia4girg-python3.12-poetry-2.1.3"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "poetry",
      "broken": false,
      "derivation": "/nix/store/3c428bz9snmvqkrl0y40jqv19k6dzj88-python3.12-poetry-2.1.3.drv",
      "description": "Python dependency management and packaging made easy",
      "install_id": "poetry",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "poetry-2.1.3",
      "pname": "poetry",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:58:29.480922Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.1.3",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/55pi42ljqw9qn6472m2b7qpv0689y2pj-python3.12-poetry-2.1.3-dist",
        "out": "/nix/store/ngj8ljgrwjx4dipnpm7ayiaxz82ym4mr-python3.12-poetry-2.1.3"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "poetry",
      "broken": false,
      "derivation": "/nix/store/83jv8j3904bxd1saa609k4340vjwczgh-python3.12-poetry-2.1.3.drv",
      "description": "Python dependency management and packaging made easy",
      "install_id": "poetry",
      "license": "MIT",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "poetry-2.1.3",
      "pname": "poetry",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T05:18:05.434232Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "2.1.3",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "dist": "/nix/store/7wpzxpwzz5vsg20k7x1j2bbhls95h52z-python3.12-poetry-2.1.3-dist",
        "out": "/nix/store/iba3xhlw8kj868lxmh2x5ryjl6j3gsys-python3.12-poetry-2.1.3"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python3",
      "broken": false,
      "derivation": "/nix/store/b3gcarlbbnfv6walgjbcf21ay5n609p1-python3-3.12.10.drv",
      "description": "High-level dynamically-typed programming language",
      "install_id": "python3",
      "license": "Python-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "python3-3.12.10",
      "pname": "python3",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:23:59.841593Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.12.10",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/v0vy1c59f0vf71h64caw17hzymvg0zms-python3-3.12.10"
      },
      "system": "aarch64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python3",
      "broken": false,
      "derivation": "/nix/store/255a922py8f7cs97nwazx68jiz2zl0r8-python3-3.12.10.drv",
      "description": "High-level dynamically-typed programming language",
      "install_id": "python3",
      "license": "Python-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "python3-3.12.10",
      "pname": "python3",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:42:20.190503Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.12.10",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/p61ablwahkxdx97pwlz29b04zpncgmvg-python3-3.12.10-debug",
        "out": "/nix/store/rpf3admp58i0lwmsbv0y3dg7l7qqj4a9-python3-3.12.10"
      },
      "system": "aarch64-linux",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python3",
      "broken": false,
      "derivation": "/nix/store/6bz0xjfswjawj6anvyw9mbk8fh8rd6sw-python3-3.12.10.drv",
      "description": "High-level dynamically-typed programming language",
      "install_id": "python3",
      "license": "Python-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "python3-3.12.10",
      "pname": "python3",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T04:58:30.139279Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.12.10",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "out": "/nix/store/g13l84j8gn1fdhl3pzkg2r9ip9jz1hhd-python3-3.12.10"
      },
      "system": "x86_64-darwin",
      "group": "toplevel",
      "priority": 5
    },
    {
      "attr_path": "python3",
      "broken": false,
      "derivation": "/nix/store/h95xflanqqarxi1j9wxmmvsh62yz8nv1-python3-3.12.10.drv",
      "description": "High-level dynamically-typed programming language",
      "install_id": "python3",
      "license": "Python-2.0",
      "locked_url": "https://github.com/flox/nixpkgs?rev=3e3afe5174c561dee0df6f2c2b2236990146329f",
      "name": "python3-3.12.10",
      "pname": "python3",
      "rev": "3e3afe5174c561dee0df6f2c2b2236990146329f",
      "rev_count": 811950,
      "rev_date": "2025-06-07T08:35:48Z",
      "scrape_date": "2025-06-09T05:18:06.808808Z",
      "stabilities": [
        "unstable"
      ],
      "unfree": false,
      "version": "3.12.10",
      "outputs_to_install": [
        "out"
      ],
      "outputs": {
        "debug": "/nix/store/fi03x2bn49bmm3h53snkdmkypilnd5n2-python3-3.12.10-debug",
        "out": "/nix/store/8w718rm43x7z73xhw9d6vh8s4snrq67h-python3-3.12.10"
      },
      "system": "x86_64-linux",
      "group": "toplevel",
      "priority": 5
    }
  ]
}